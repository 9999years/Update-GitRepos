digraph programflow {
	/*
	I've tried to make this as readable as possible, but have probably failed.
	The "main" vertical column is represented as the first line of content, with other off-shoots on later lines.
	*/
	
	commit -> commit_yes -> custom_pathspec -> pathspec_no -> use_dot -> git_add -> commit_length -> length_short -> input_message -> message_exit -> message_no -> git_commit_m

	commit -> commit_no -> commit_done

	custom_pathspec -> pathspec_yes -> input_pathspec -> git_add

	commit_length -> length_long -> git_commit

	message_exit -> message_yes -> message_done

	commit [label="Commit? (Confirm-CommitChoice)"]
	commit_no [label="No"]
	commit_yes [label="Yes"]
	commit_done [label="Done"]
	pathspec_yes [label="Yes"]
	pathspec_no [label="No"]
	custom_pathspec [label="Add files: Custom pathspec?\n(Confirm-CustomPathspec.EnterPathSpec)"]
	use_dot [label="Use `.`"]
	input_pathspec [label="Input pathspec\n(Confirm-CustomPathSpec)"]
	git_add [label="`git add $Path`"]
	git_commit [label="`git commit`"]
	git_commit_m [label="`git commit -m $Message`"]
	commit_length [label="Long or short commit message?\n(Confirm-LongCommit)"]
	length_long [label="Long"]
	length_short [label="Short"]
	input_message [label="Input commit message\n(Confirm-LongCommit.ReadCommitMessage)"]
	message_exit [label="Message == \"<<EXIT>>\"?"]
	message_no [label="No"]
	message_yes [label="Yes"]
	message_done [label="Done"]
}
